<div class="card mb-4" id="parts-section">
  <div class="card-header d-flex justify-content-between align-items-center">
    <h5 class="mb-0">Peças Utilizadas</h5>
    <%= link_to "Gerenciar Peças", parts_path, target: "_blank", class: "btn btn-sm btn-outline-primary" %>
  </div>
  <div class="card-body">
    <div id="parts-list">
      <% if service_order.service_order_parts.any? %>
        <% service_order.service_order_parts.each do |sop| %>
          <%= render 'part_item', f: form, service_order_part: sop, index: sop.id || Time.current.to_i %>
        <% end %>
      <% end %>
    </div>

    <button type="button" class="btn btn-success mt-3" id="add-part-btn">
      <i class="fas fa-plus"></i> Adicionar Peça
    </button>

    <div class="alert alert-info mt-3 mb-0">
      <strong><i class="fas fa-info-circle"></i> Dica:</strong>
      O valor total das peças será calculado automaticamente e atualizado no campo "Valor das Peças".
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const addPartBtn = document.getElementById('add-part-btn');
  const partsList = document.getElementById('parts-list');
  let partIndex = Date.now();

  addPartBtn.addEventListener('click', function() {
    const newPartHtml = `
      <div class="part-item border rounded p-3 mb-3" data-part-index="${partIndex}">
        <div class="row">
          <div class="col-md-5">
            <label class="form-label">Peça</label>
            <select name="service_order[service_order_parts_attributes][${partIndex}][part_id]" class="form-select part-select" required>
              <option value="">Selecione uma peça</option>
              <% Part.active.order(:name).each do |part| %>
                <option value="<%= part.id %>" data-price="<%= part.unit_price %>">
                  <%= part.full_name %> - <%= part.formatted_unit_price %>
                </option>
              <% end %>
            </select>
          </div>
          
          <div class="col-md-2">
            <label class="form-label">Quantidade</label>
            <input type="number" name="service_order[service_order_parts_attributes][${partIndex}][quantity]" 
                   class="form-control part-quantity" min="1" value="1" required>
          </div>
          
          <div class="col-md-3">
            <label class="form-label">Preço Unit. (R$)</label>
            <input type="number" step="0.01" name="service_order[service_order_parts_attributes][${partIndex}][unit_price]" 
                   class="form-control part-price" min="0" value="0" required>
          </div>
          
          <div class="col-md-2 d-flex align-items-end">
            <button type="button" class="btn btn-danger btn-sm w-100 remove-part-btn">
              <i class="fas fa-trash"></i> Remover
            </button>
          </div>
        </div>
      </div>
    `;
    
    partsList.insertAdjacentHTML('beforeend', newPartHtml);
    partIndex++;
    
    // Adicionar event listeners aos novos elementos
    attachPartListeners();
  });

  function attachPartListeners() {
    // Remover peça
    document.querySelectorAll('.remove-part-btn').forEach(btn => {
      btn.replaceWith(btn.cloneNode(true));
    });
    
    document.querySelectorAll('.remove-part-btn').forEach(btn => {
      btn.addEventListener('click', function() {
        const partItem = this.closest('.part-item');
        const destroyInput = partItem.querySelector('input[name*="_destroy"]');
        if (destroyInput) {
          destroyInput.value = '1';
          partItem.style.display = 'none';
        } else {
          partItem.remove();
        }
      });
    });

    // Atualizar preço quando seleciona peça
    document.querySelectorAll('.part-select').forEach(select => {
      select.replaceWith(select.cloneNode(true));
    });

    document.querySelectorAll('.part-select').forEach(select => {
      select.addEventListener('change', function() {
        const selectedOption = this.options[this.selectedIndex];
        const price = selectedOption.dataset.price;
        const priceInput = this.closest('.part-item').querySelector('.part-price');
        if (price && priceInput) {
          priceInput.value = price;
        }
      });
    });
  }

  attachPartListeners();
});
</script>
